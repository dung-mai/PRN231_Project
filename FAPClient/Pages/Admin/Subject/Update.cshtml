@page "/admin/subject/update/{id}"
@model FAPClient.Pages.Admin.Subject.UpdateModel
@{
    Layout = "_LayoutAdmin";
}

<form method="post">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Update Subject</h5>
            <button type="button" class="btn-close" data-mdb-dismiss="modal" aria-label="Close" onclick="closePopup('updateSubjectModal')"></button>
        </div>
        <div class="modal-body">
            <div class="container">
                <div class="row">
                    <div class="form col-5">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="input-group">
                            <label asp-for="SubjectUpdate.SubjectName" style="min-width: 130px" class="control-label"></label>
                            <input id="updateSubjectName" asp-for="SubjectUpdate.SubjectName" class="form-control" required />
                            <span asp-validation-for="SubjectUpdate.SubjectName" class="text-danger"></span>
                        </div>
                        <div class="input-group mt-2">
                            <label asp-for="SubjectUpdate.SubjectCode" style="min-width: 130px" class="control-label"></label>
                            <input id="updateSubjectCode" asp-for="SubjectUpdate.SubjectCode" class="form-control" required />
                            <span asp-validation-for="SubjectUpdate.SubjectCode" class="text-danger"></span>
                        </div>
                        <div class="input-group mt-2">
                            <label asp-for="SubjectUpdate.DateOfIssues" style="min-width: 130px" class="control-label"></label>
                            <input id="updateSubjectDateOfIssues" asp-for="SubjectUpdate.DateOfIssues" type="date" class="form-control" required />
                            <span asp-validation-for="SubjectUpdate.DateOfIssues" class="text-danger"></span>
                        </div>
                        <div class="input-group mt-2">
                            <label asp-for="SubjectUpdate.NumOfCredits" style="min-width: 130px" class="control-label"></label>
                            <input id="updateSubjectNumOfCredits" asp-for="SubjectUpdate.NumOfCredits" class="form-control" required />
                            <span asp-validation-for="SubjectUpdate.NumOfCredits" class="text-danger"></span>
                        </div>
                        <input id="updateSubjectId" asp-for="SubjectUpdate.Id" type="hidden" />
                    </div>

                    <div class="update-table col-6 p-0" style="margin-left: 60px;">
                        <h4 class="h5">Update grade components</h4>
                        <div>
                            <table class="table">
                                <thead>
                                    @*                                    <tr>
                                    <th style="display: inline-block;margin-right: 10px; width:195px">Category Item</th>
                                    <th style="display: inline-block; margin-right: 10px;width:195px">Grade Item</th>
                                    <th style="display: inline-block;margin-right: 40px;width: 80px">Percentage</th>
                                    <th></th>
                                    </tr>*@
                                </thead>
                                <tbody>
                                    <tr>
                                        <td style="display: inline-block;margin-right: 10px;width:195px">
                                            @*<input type="text" name="categoryItem" class="form-control" required placeholder="category item" />*@
                                            <select name="gradeCategory" class="form-select" onchange="$('#grade-item-input').val(this.value)">
                                                <option>Choose a category item</option>
                                                <option value="Assignment">Assignment</option>
                                                <option value="Progress Test">Progress Test</option>
                                                <option value="Presentation">Presentation</option>
                                                <option value="Lab">Lab</option>
                                                <option value="Quiz">Quiz</option>
                                                <option value="Participation">Participation</option>
                                                <option value="Project">Project</option>
                                                <option value="Group Project">Group Project</option>
                                                <option value="CheckPoint">CheckPoint</option>
                                                <option value="Group Contructivism">Group Contructivism</option>
                                                <option value="Pratical Exam">Pratical Exam</option>
                                                <option value="Final Exam">Final Exam</option>
                                            </select>
                                        </td>
                                        <td style="display: inline-block;margin-right: 10px;width:195px">
                                            <input type="text" name="gradeItem" class="form-control" required placeholder="grade item" id="grade-item-input"/>
                                        </td>
                                        <td style="display: inline-block;margin-right: 30px;width: 110px">
                                            <input type="number" name="weight" class="form-control" placeholder="weight" required />
                                        </td>
                                        <td>
                                            <button type="button" onclick="addGradeComponent()">+</button>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>

                            <h5 class="mt-5">Preview</h5>
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Category Item</th>
                                        <th>Grade Item</th>
                                        <th>Percentage</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody id="list-grade-component">
                                   @* @foreach (var item in Model.SubjectUpdate.GradeComponents)
                                    {
                                        <tr>

                                            <td>
                                                <input type="text" name="categoryItem" required />
                                            </td>
                                            <td>
                                                <input type="text" name="gradeItem" required />
                                            </td>
                                            <td>
                                                <input type="number" name="weight" required />
                                            </td>
                                            <td>
                                                <button type="button">+</button>
                                            </td>
                                        </tr>
                                    }*@
                                    @for (var i = 0; i < Model.SubjectUpdate.GradeComponents.Count; i++)
                                    {
                                        var item = Model.SubjectUpdate.GradeComponents[i];
                                        <tr>
                                            <td>
                                                <input asp-for="SubjectUpdate.GradeComponents[i].GradeCategory"  required />
                                            </td>
                                            <td>
                                                <input asp-for="SubjectUpdate.GradeComponents[i].GradeItem" class="subjectId" />
                                            </td>
                                            <td>
                                                <input asp-for="SubjectUpdate.GradeComponents[i].Weight" class="subjectId" />
                                            </td>
                                            <td>
                                                <input asp-for="SubjectUpdate.GradeComponents[i].Id" class="subjectId" type="hidden" />
                                                <button type="button" onclick="removeGradeComponent(@i)">X</button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>

            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" onclick="closePopup('updateSubjectModal')">Close</button>
            <button type="submit" class="btn btn-primary">Update</button>
        </div>
    </div>
</form>
<script type="text/javascript">
    let gradeComponents = [];
    $(document).ready(() => {
        gradeComponents = Array.from(document.querySelectorAll('#list-grade-component tr')).map(tr => {
            const list = tr.querySelectorAll('td');
            const categoryItem = list[0].value;
            const gradeItem = list[1].value;
            const weight = parseInt(list[2].value);
            const id = parseInt(tr.querySelectorAll('input[type="hidden"]').value);
            return { id, categoryItem, gradeItem, weight};
        });
    });

    function addGradeComponent() {
        const gradeCategory = document.querySelector('select[name="gradeCategory"]').value;
        const gradeItem = document.querySelector('input[name="gradeItem"]').value;
        const weight = parseInt(document.querySelector('input[name="weight"]').value);

        const newIndex = $('#list-grade-component tr').length;
        const newItem = { id: '', categoryItem: gradeCategory, gradeItem: gradeItem, weight: weight };
        const isExist = gradeComponents.map(item => item.gradeItem).includes(`${newItem.gradeItem}`);
        if (!isExist) {
            $('#list-grade-component').append(`<tr>
                                                <td>
                                                    <input type="text" name="SubjectUpdate.GradeComponents[${newIndex}].GradeCategory" value="${newItem.categoryItem}" required />
                                                </td>
                                                <td>
                                                    <input type="text" name="SubjectUpdate.GradeComponents[${newIndex}].GradeItem" value="${newItem.gradeItem}" required/>
                                                </td>
                                                <td>
                                                    <input type="number" name="SubjectUpdate.GradeComponents[${newIndex}].Weight" value="${newItem.weight}" required/>
                                                </td>
                                                <td>
                                                    <input name="SubjectUpdate.GradeComponents[${newIndex}].Id" type="hidden" value="${newItem.id}" />
                                                        <button type="button" onclick="removeGradeComponent(${newIndex})">X</button>
                                                </td>
                                    </tr>`);
            gradeComponents.push(newItem);
        } else {
            console.log("This subject already exists");
        }
    }

    function removeGradeComponent(index){
        gradeComponents.splice(index, 1);
        renderGradeComponentList();
    }

    function displaySubjectList(data) {
        $('#display-search-result').html(`
                                            ${data.map((item) =>
            `<tr>
                        <td>${item.subjectCode}</td>
                        <td style="display: inline-block;max-width: 350px">${item.subjectName}</td>
                        <td>
                            <button type="button" onclick="addSubject(${item.id}, '${item.subjectCode}', '${item.subjectName}')">+</button>
                        </td>
                    </tr>`
        )
                .join("")}
                                    `);
    }


    const renderGradeComponentList = () => {
        $('#list-grade-component').html(gradeComponents.map((item, index) =>
                                        `<tr>
                                            <td>
                                                        <input type="text" name="SubjectUpdate.GradeComponents[${index}].GradeCategory" value="${item.categoryItem}" required />
                                            </td>
                                            <td>
                                                    <input type="text" name="SubjectUpdate.GradeComponents[${index}].GradeItem" value="${item.gradeItem}" required/>
                                            </td>
                                            <td>
                                                    <input type="number" name="SubjectUpdate.GradeComponents[${index}].Weight" value="${item.weight}" required/>
                                            </td>
                                            <td>
                                                    <input name="SubjectUpdate.GradeComponents[${index}].Id" type="hidden" value="${item.id}" />
                                                        <button type="button" onclick="removeGradeComponent(${index})">X</button>
                                            </td>
                                        </tr>`
                                        ).join("")
                                        );
        //$('#subject-to-add-update').html(`
        //                                    ${subjectOfCurricolums.map((item, index) =>
        //    `<tr>
        //                <td>${item.subjectCode}</td>
        //                <td>${item.subjectName}</td>
        //                <td>
        //                        <input type="text" name="CurricolumUpdate.Subjects[${index}].TermNo" value="${item.termNo}" style="width: 60px" onchange="updateSubjectTermNo(${index})"/>
        //                    <input type="hidden" name="CurricolumUpdate.Subjects[${index}].SubjectId" value="${item.subjectId}"/>
        //                    <input name="CurricolumUpdate.Subjects[${index}].Id" value="${item.id}" type="hidden"/>
        //                </td>
        //                <td>
        //                     <button type="button" onclick="removeSubject(${item.subjectId})">X</button>
        //                </td>
        //            </tr>`
        //).join("")}
        //        `);
    }

    function addSubject(subjectId, code, name) {
        const newIndex = $('#subject-to-add-update tr').length;
        const newItem = { subjectId: subjectId, subjectCode: code, subjectName: name, termNo: "", id: '' };
        const isExist = Array.from(document.querySelectorAll('#subject-to-add-update input[type="hidden"].subjectId')).map(input => input.value).includes(`${newItem.subjectId}`);
        console.log(isExist);
        if (!isExist) {
            $('#subject-to-add-update').append(`<tr>
                                                <td>${newItem.subjectCode}</td>
                                                <td>${newItem.subjectName}</td>
                                            <td>
                                                        <input type="text" name="CurricolumUpdate.Subjects[${newIndex}].TermNo" style="width: 60px" required onchange="updateSubjectTermNo(${newIndex})"/>
                                                <input type="hidden" name="CurricolumUpdate.Subjects[${newIndex}].SubjectId" value="${newItem.subjectId}"/>
                                                <input name="CurricolumUpdate.Subjects[${newIndex}].Id" value="${newItem.id}" type="hidden"/>
                                            </td>
                                            <td>
                                                        <button type="button" onclick="removeSubject(${newItem.subjectId})">X</button>
                                            </td>
                                        </tr>`);
            subjectOfCurricolums.push(newItem);
        } else {
            console.log("This subject already exists");
        }

    }

    function removeSubject(subjectId) {
    }

    function updateSubjectTermNo(index) {
        console.log('update termNo sucessfully!');
        subjectOfCurricolums[index].termNo = document.querySelectorAll('#subject-to-add-update tr')[index].querySelector('input[type="text"]').value;
    }
</script>