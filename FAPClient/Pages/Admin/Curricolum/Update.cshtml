@page "/admin/curricolum/update/{id}"
@model FAPClient.Pages.Admin.Curricolum.UpdateModel
@{
    Layout = "_LayoutAdmin";
}

<!-- Modal Update Curricolum -->
<form method="post">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Update Curricolum</h5>
            <button type="button" class="btn-close" data-mdb-dismiss="modal" aria-label="Close" onclick="closePopup('updateCurricolumModal')"></button>
        </div>
        <div class="modal-body">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="input-group w-50">
                <label class="input-group-text" style="min-width: 150px">Curricolum Name</label>
                <input id="updateCurricolumName" asp-for="CurricolumUpdate.CurricolumName" class="form-control" required />
                <span asp-validation-for="CurricolumUpdate.CurricolumName" class="text-danger"></span>
            </div>
            <div class="input-group w-50 mt-2">
                <label class="input-group-text" style="min-width: 150px">Major Name</label>
                <select id="updateMajorId" asp-for="CurricolumUpdate.MajorId" class="form-select" asp-items="ViewBag.Majors"></select>
            </div>
            <div class="input-group w-50 mt-2">
                <label class="input-group-text" style="min-width: 150px">Start Semester</label>
                <select asp-for="CurricolumUpdate.StartSemeterId" class="form-select" asp-items="ViewBag.Semesters">
                </select>
            </div>
            <input id="updateCurricolumId" asp-for="CurricolumUpdate.Id" type="hidden" />

            <div class="" style="min-width: 500px;">
                <h4 class="mt-3">Add subjects</h4>
                <div class="d-flex align-items-start justify-content-between">
                    <div class="">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Subject Code</th>
                                    <th>Subject Name</th>
                                    <th>Term No</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody id="subject-to-add-update">
                                @for (var i = 0; i < Model.CurricolumUpdate.Subjects.Count; i++)
                                {
                                    var item = Model.CurricolumUpdate.Subjects[i];
                                    <tr>
                                        <td>@item.Subject.SubjectCode</td>
                                        <td>@item.Subject.SubjectName</td>
                                        <td>
                                            <input type="text" asp-for="CurricolumUpdate.Subjects[i].TermNo" style="width: 60px" required onchange="updateSubjectTermNo(@i)" />
                                            <input asp-for="CurricolumUpdate.Subjects[i].SubjectId" type="hidden" class="subjectId"/>
                                            <input asp-for="CurricolumUpdate.Subjects[i].Id" type="hidden"/>
                                        </td>
                                        <td>
                                            <button type="button" onclick="removeSubject(@Model.CurricolumUpdate.Subjects[i].SubjectId)">X</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="ms-2" style="min-width: 550px;">
                        <h4>Search subject</h4>
                        <div class="search-form d-flex align-items-center">
                            <input type="text" style="line-height: 1.5; height: 35px;" name="search-subject" placeholder="Subject Code" />
                            <span id="search-subject-btn" class="btn btn-outline-secondary ms-2">Search</span>
                        </div>
                        <div>
                            <table class="table">
                                <tbody id="display-search-result">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <a href="/admin/curricolum" class="btn btn-secondary">Back</a>
                <button type="submit" class="btn btn-primary">Update</button>
            </div>
        </div>
</form>
<script type="text/javascript">
    let subjectOfCurricolums = [];
    $(document).ready(() => {
        subjectOfCurricolums = Array.from(document.querySelectorAll('#subject-to-add-update tr')).map(tr => {
            const list = tr.querySelectorAll('td');
            const subjectCode = list[0].innerHTML;
            const subjectName = list[1].innerHTML;
            const termNo = tr.querySelector('input[type="text"]').value;
            const subjectId = parseInt(tr.querySelectorAll('input[type="hidden"]')[0].value);
            const id = parseInt(tr.querySelectorAll('input[type="hidden"]')[1].value);
            return {id, subjectId, subjectCode, termNo, subjectName};
        });
    });

    function displaySubjectList(data) {
        $('#display-search-result').html(`
                                    ${data.map((item) =>
            `<tr>
                <td>${item.subjectCode}</td>
                <td style="display: inline-block;max-width: 350px">${item.subjectName}</td>
                <td>
                    <button type="button" onclick="addSubject(${item.id}, '${item.subjectCode}', '${item.subjectName}')">+</button>
                </td>
            </tr>`
        )
                .join("")}
                            `);
    }

    const searchSubjectBtn = document.querySelector('#search-subject-btn');
    searchSubjectBtn.addEventListener('click', (e) => {
        const searchSubjectInput = document.querySelector('input[name="search-subject"]');
        const apiUrl = `http://localhost:5199/api/Subjects?$filter=contains(SubjectCode,'${searchSubjectInput.value}')`;
        const data = callAjax(apiUrl, displaySubjectList);
    });

    const renderSubjectList = () => {
        $('#subject-to-add-update').html(`
                                    ${subjectOfCurricolums.map((item, index) =>
            `<tr>
                <td>${item.subjectCode}</td>
                <td>${item.subjectName}</td>
                <td>
                        <input type="text" name="CurricolumUpdate.Subjects[${index}].TermNo" value="${item.termNo}" style="width: 60px" onchange="updateSubjectTermNo(${index})"/>
                    <input type="hidden" name="CurricolumUpdate.Subjects[${index}].SubjectId" value="${item.subjectId}"/>
                    <input name="CurricolumUpdate.Subjects[${index}].Id" value="${item.id}" type="hidden"/>
                </td>
                <td>
                     <button type="button" onclick="removeSubject(${item.subjectId})">X</button>
                </td>
            </tr>`
        ).join("")}
        `);
    }

    function addSubject(subjectId, code, name) {
        const newIndex = $('#subject-to-add-update tr').length;
        const newItem = { subjectId: subjectId, subjectCode: code, subjectName: name, termNo: "", id : '' };
        const isExist = Array.from(document.querySelectorAll('#subject-to-add-update input[type="hidden"].subjectId')).map(input => input.value).includes(`${newItem.subjectId}`);
        console.log(isExist);
        if (!isExist) {
            $('#subject-to-add-update').append(`<tr>
                                        <td>${newItem.subjectCode}</td>
                                        <td>${newItem.subjectName}</td>
                                    <td>
                                                <input type="text" name="CurricolumUpdate.Subjects[${newIndex}].TermNo" style="width: 60px" required onchange="updateSubjectTermNo(${newIndex})"/>
                                        <input type="hidden" name="CurricolumUpdate.Subjects[${newIndex}].SubjectId" value="${newItem.subjectId}"/>
                                        <input name="CurricolumUpdate.Subjects[${newIndex}].Id" value="${newItem.id}" type="hidden"/>
                                    </td>
                                    <td>
                                                <button type="button" onclick="removeSubject(${newItem.subjectId})">X</button>
                                    </td>
                                </tr>`);
            subjectOfCurricolums.push(newItem);
        } else {
            console.log("This subject already exists");
        }

    }

    function removeSubject(subjectId) {
        subjectOfCurricolums = subjectOfCurricolums.filter(item => item.subjectId !== parseInt(subjectId));
        renderSubjectList();
    }

    function updateSubjectTermNo(index){
        console.log('update termNo sucessfully!');
        subjectOfCurricolums[index].termNo = document.querySelectorAll('#subject-to-add-update tr')[index].querySelector('input[type="text"]').value;
    }


</script>
